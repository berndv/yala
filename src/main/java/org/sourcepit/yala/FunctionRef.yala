/*
 * Copyright 2015 Bernd Vogt and others.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.sourcepit.yala

/**
 * @author Bernd Vogt <bernd.vogt@sourcepit.org>
 */
class FunctionRef {

	val String name
	
	val Function<(Integer, String) String ! Error> foo = (i, str) -> {
		return ""
	}
	
	func Foo (Integer, String) : String ! Error
	
	val foo(Integer) : String, Double, Float ! Error = (i) -> {
		return "", 0, 0
	}
	
	const foo(Integer) : String, Double, Float ! Error

	doSth( callback(Integer,String):Float!Error, String name ) {
		try {
			Float f = callback(10,"") + i
		} catch (e Error) {
			e.printStackTrace()
		}
		
		String str = foo(1, "")
	}

}